openapi: "3.0.2"
x-stoplight:
  id: c8yfnspkmvpl7
info:
  title: medicalCenter
  version: "1.0"
servers:
  - url: "http://localhost:3000"
paths:
  /ping:
    get:
      description: 'Ping the server'
      parameters: []
      responses:
        "200":
          description: OK
      operationId: get-ping
  /login:
    post:
      summary: login endpoint
      tags: []
      operationId: post-login
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                      type: string
                  username:
                    type: string
                  name:
                    type: string
                  userRole:
                    type: string
        "401":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                      type: string
        "500":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
  /users:
    post:
      summary: Create a user
      tags: []
      operationId: post-users
      responses:
        "200":
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user-new"
    get:
      summary: Get list of users
      tags: []
      responses:
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  objectCount:
                    type: integer
                  hasMore:
                    type: boolean
                  responseObject:
                    type: string
                  objectArray:
                    type: array
                    items:
                      $ref: "#/components/schemas/user"
      operationId: get-users
      parameters:
        - $ref: ./Main Document.yaml#/components/parameters/limit
        - $ref: ./Main Document.yaml#/components/parameters/starting_after_object
  /users/{userId}:
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: ID of the user
    patch:
      summary: update a user
      tags: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "401":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                      type: string
        "500":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user-update"
      operationId: patch-users

  /users/{userId}/resetPasswords:
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: ID of the user
    get:
      summary: reset the user password
      tags: []
      responses:
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                      type: string
        "500":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                      type: string
      operationId: get-users-userId-resetPasswords

  /patients:
    get:
      summary: get list of patients
      description: "Get patients list"
      parameters:
        - $ref: "#/components/parameters/patientName"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/starting_after_object"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  objectCount:
                    type: integer
                  hasMore:
                    type: boolean
                  responseObject:
                    type: string
                  objectArray:
                    type: array
                    items:
                      type: object
                      $ref: "#/components/schemas/patient"
      operationId: get-patients
    post:
      description: "Create a new Patient"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patient-new"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/patient"
      operationId: post-patients

  /patients/{patientId}:
    parameters:
      - schema:
          type: string
        name: patientId
        in: path
        required: true
        description: ID of the patient
    patch:
      description: "Update a Patient"
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/patient"
      operationId: patch-patients-patientId
  
  /patients/{patientId}/invoices:
    parameters:
      - schema:
          type: string
        name: patientId
        in: path
        required: true
        description: ID of the patient
    get:
      description: "get patient invoices"
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/invoice"
      operationId: get-patients-patientId-invoices
    post:
      description: "submit a new patient invoice"
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/invoice-new"      
      operationId: post-patients-patientId-invoices

  /workOrders:
    get:
      description: "Get list of work orders"
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/starting_after_object"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/workOrder"
  /workOrders/{workOrderId}:
    get:
      description: "Get single work order details"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/workOrder"
  /workOrders/{workOrderId}/{testId}:
    patch:
      description: "update test information for a work order"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                # Needs work

  /doctors:
    get:
      description: "Get doctors list"
      parameters:
        - $ref: "#/components/parameters/doctorName"
        - $ref: "#/components/parameters/doctorSpecialty"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/starting_after_object"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  objectCount:
                    type: integer
                  hasMore:
                    type: boolean
                  responseObject:
                    type: string
                  objectArray:
                    type: array
                    items:
                      type: object
                      $ref: "#/components/schemas/patient"
      operationId: get-doctors
    post:
      description: "Create a new doctor"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/doctor-new"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/doctor"
      operationId: post-doctors
  /doctors/{doctorId}:
    parameters:
      - schema:
          type: string
        name: doctorId
        in: path
        required: true
        description: ID of the doctor
    patch:
      description: "Update a Patient"
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/doctor"
      operationId: patch-patients-doctorId

  /schedules:
    get:
      description: "Get doctors list"
      parameters:
        - $ref: "#/components/parameters/doctorId"
        - $ref: "#/components/parameters/doctorSpecialty"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/starting_after_object"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  objectCount:
                    type: integer
                  hasMore:
                    type: boolean
                  responseObject:
                    type: string
                  objectArray:
                    type: array
                    items:
                      type: object
                      $ref: "#/components/schemas/scheduleForDoctor"
      operationId: get-doctors
    post:
      description: "Create a new doctor"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/doctor-new"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/doctor"
      operationId: post-doctors
  /schedules/{scheduleId}:
    parameters:
      - schema:
          type: string
        name: doctorId
        in: path
        required: true
        description: ID of the doctor
    patch:
      description: "Update a Patient"
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/doctor"
      operationId: patch-patients-doctorId
  /chronicDiseases:
    get:
      description: ''
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/starting_after_object"
        - $ref: "#/components/parameters/nameSearch"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  objectCount:
                        type: integer
                  hasMore:
                    type: boolean
                  responseObject:
                    type: string
                  objectArray:
                    type: array
                    items:
                      $ref: "#/components/schemas/chronicDiseases"
    post:
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chronicDiseases-new"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chronicDiseases"
  
  /chronicDiseases/{chronicDiseaseId}:
    patch:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/chronicDiseases-new"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chronicDiseases"

  /cities:
    get:
      description: ''
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/starting_after_object"
        - $ref: "#/components/parameters/nameSearch"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  objectCount:
                        type: integer
                  hasMore:
                    type: boolean
                  responseObject:
                    type: string
                  objectArray:
                    type: array
                    items:
                      $ref: "#/components/schemas/cities"
    post:
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cities-new"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cities"
  
  /cities/{citiesId}:
    patch:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/cities-new"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/cities"        

  /laboratoryEquipments :
    get:
      description: ''
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/starting_after_object"
        - $ref: "#/components/parameters/nameSearch"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  objectCount:
                        type: integer
                  hasMore:
                    type: boolean
                  responseObject:
                    type: string
                  objectArray:
                    type: array
                    items:
                      $ref: "#/components/schemas/laboratoryEquipments"
    post:
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/laboratoryEquipments-new"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/laboratoryEquipments"
  
  /laboratoryEquipments/{laboratoryEquipmentId}:
    patch:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/laboratoryEquipments-new"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/laboratoryEquipments"
  
  /nationalities :
    get:
      description: ''
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/starting_after_object"
        - $ref: "#/components/parameters/nameSearch"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  objectCount:
                        type: integer
                  hasMore:
                    type: boolean
                  responseObject:
                    type: string
                  objectArray:
                    type: array
                    items:
                      $ref: "#/components/schemas/nationalities"
    post:
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/nationalities-new"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/nationalities"
  
  /nationalities/{nationalityId}:
    patch:
      description: ""
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/nationalities-new"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/nationalities"

  /medicalSpecialties :
    get:
      description: ''
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/starting_after_object"
        - $ref: "#/components/parameters/nameSearch"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  objectCount:
                        type: integer
                  hasMore:
                    type: boolean
                  responseObject:
                    type: string
                  objectArray:
                    type: array
                    items:
                      $ref: ../models/HMS.yaml#/components/schemas/medicalSpecialties
    post:
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/HMS.yaml#/components/schemas/medicalSpecialties-new
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/HMS.yaml#/components/schemas/medicalSpecialties

  /userRoles :
      get:
        description: ''
        parameters:
          - $ref: "#/components/parameters/limit"
          - $ref: "#/components/parameters/starting_after_object"
          - $ref: "#/components/parameters/nameSearch"
        responses:
          "200":
            description: OK
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    objectCount:
                          type: integer
                    hasMore:
                      type: boolean
                    responseObject:
                      type: string
                    objectArray:
                      type: array
                      items:
                        $ref: ./Main Document.yaml#/components/parameters/limit
      post:
        description: ''
        parameters: []
        requestBody:
          content:
            application/json:
              schema:
                $ref: ../models/HMS.yaml#/components/schemas/medicalSpecialties-new
        responses:
          "200":
            description: OK
            content:
              application/json:
                schema:
                  $ref: ../models/HMS.yaml#/components/schemas/medicalSpecialties


#  Components Go here -----------------------------------------
components:
  schemas:
    user:
      type: object
      properties:
        userId:
          type: string
        username:
          type: string
        userRole:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        thirdName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string    
    user-new:
      type: object
      properties:
        username:
          type: string
        userRole:
          type: array
          items:
            type: string
        firstName:
          type: string
        middleName:
          type: string
        thirdName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string
    user-update:
      type: object
      properties:
        username:
          type: string
        userRole:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        thirdName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string
    patient:
      type: object
      properties:
        patientId:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        thirdName:
          type: string
        forthName:
          type: string
        lastName:
          type: string
        bloodType:
          type: string        
        gender:
          type: string
        phoneNumber:
          type: array
          items:
            type: string
        martialStatus:
          type: string
        city:
          type: string
        passportId:
          type: string
        accountId:
          type: string
        dateOfBirth:
          type: string
          format: YYYY-MM-DD
        dateCreated:
          type: string
          format: YYYY-MM-DD
        dateUpdated:
          type: string
          format: YYYY-MM-DD
    patient-new:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        thirdName:
          type: string
        forthName:
          type: string
        lastName:
          type: string
        bloodType:
          type: string        
        gender:
          type: string
        phoneNumber:
          type: array
          items:
            type: string
        martialStatus:
          type: string
        city:
          type: string
        passportId:
          type: string
        accountId:
          type: string
        dateOfBirth:
          type: string
          format: YYYY-MM-DD
    patient-update:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        thirdName:
          type: string
        forthName:
          type: string
        lastName:
          type: string
        bloodType:
          type: string        
        gender:
          type: string
        phoneNumber:
          type: array
          items:
            type: string
        martialStatus:
          type: string
        city:
          type: string
        passportId:
          type: string
        accountId:
          type: string
        dateOfBirth:
          type: string
          format: YYYY-MM-DD
    
    invoice:
      type: object
      properties:
        invoiceId:
          type: string
        patientId:
          type: string
        dateSubmitted:
          type: string
          format: YYYY-MM-DD
        total:
          type: string        
        submittedBy:
          type: string
        serviceList:
          type: array
          items:
            type: object
            properties:
              workOrderId:
                type: string
              serviceId:
                type: string
              serviceName:
                type: string
              charge:
                type: string
              discountedCharge:
                type: string
    invoice-new:
      type: object
      properties:
        dateSubmitted:
          type: string
          format: YYYY-MM-DD
        total:
          type: string
        serviceList:
          type: array
          items:
            type: object
            properties:
              serviceId:
                type: string
              serviceName:
                type: string
              serviceCategory:
                type: string
              charge:
                type: string
              discountedCharge:
                type: string

    workOrder:
      type: object
      properties:
        workOrderId:
          type: string
        serviceId:
          type: string
        serviceName:
          type: string
        invoiceId:
          type: string
        serviceCategory:
          type: string      
        dateSubmitted:
          type: string
          format: YYYY-MM-DD
        IsClosed:
          type: boolean
        workOrderDetails:
          type: object
          properties:
            patientDetails:
              $ref: "#/components/schemas/patient"
            tasks:
              type: object
              properties:
                testId:
                  type: string
                testName:
                  type: string
                completionStatus:
                  type: string
                  enum: ["pending", "completed", "rejected"]
                results:
                  type: string
                  # Needs work

              

      
    doctor:
      type: object
      properties:
        doctorId:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        thirdName:
          type: string
        forthName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        Specialty:
          type: string
        dateOfBirth:
          type: string
          format: YYYY-MM-DD  
        isActive:
          type: boolean
        dateJoined:
          type: string
          format: YYYY-MM-DD
        dateCreated:
          type: string
          format: YYYY-MM-DD
        dateUpdated:
          type: string
          format: YYYY-MM-DD
    doctor-new:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        thirdName:
          type: string
        forthName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        Specialty:
          type: string
        dateOfBirth:
          type: string
          format: YYYY-MM-DD  
        isActive:
          type: boolean
    doctor-update:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        thirdName:
          type: string
        forthName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        Specialty:
          type: string
        dateOfBirth:
          type: string
          format: YYYY-MM-DD  
        isActive:
          type: boolean
        dateJoined:
          type: string
          format: YYYY-MM-DD
  
    scheduleForDoctor:
      type: object
      properties:
        doctorId:
          type: string
        doctorFullName:
          type: string
        scheduleList:
          type: array
          items:
            type: object
            anyOf:
              - properties:
                  scheduleId:
                    type: string
                  scheduleType:
                    type: string
                    enum:
                    - standard
                    - custom
                    description: describes the type of scheduling
                  timeSlot:
                    type: string
                    enum:
                      - morning
                      - afternoon
                      - evening
                      - explicit
                  day:
                    type: array
                    items:
                      type: string
                      enum:
                        - sat
                        - mon
                        - tue
                        - wed
                        - wed
                        - wed
                        - thu
                        - fri
                        - sun
                  startTime:
                    type: string
                    format: HH:MM:SS
                  endTime:
                    type: string
                    format: HH:MM:SS
                  start:
                    type: string
                    format: YYYY-MM-DD
                  end:
                    type: string
                    format: YYYY-MM-DD
                  dateCreated:
                    type: string
                    format: YYYY-MM-DD
                  dateUpdated:
                    type: string
                    format: YYYY-MM-DD                  
              - properties:
                  scheduleId:
                    type: string
                  scheduleType:
                    type: string
                    enum:
                    - standard
                    - custom
                    description: describes the type of scheduling
                  start:
                    type: string
                    format: date-time
                  end:
                    type: string
                    format: date-time
                  dateCreated:
                    type: string
                    format: YYYY-MM-DD
                  dateUpdated:
                    type: string
                    format: YYYY-MM-DD

    chronicDiseases:
      type: object
      properties:
        diseaseId:
          type: string
        diseaseName:
          type: string
        diseaseNameEn:
          type: string
        icd:
          type: string
    chronicDiseases-new:
      type: object
      properties:
        diseaseName:
          type: string
        diseaseNameEn:
          type: string
        icd:
          type: string


    cities:
      type: object
      properties:
        cityId:
          type: string
        cityName:
          type: string
        cityNameEn:
          type: string
    cities-new:
      type: object
      properties:
        cityName:
          type: string
        cityNameEn:
          type: string

    laboratoryEquipments:
      type: object
      properties:
        equipmentId:
          type: string
        productName:
          type: string
        Brand:
          type: string
        SerialNumber:
          type: string
        datePurchased:
          type: string
          format: YYYY-MM-DD  
        isActive:
          type: boolean
    
    laboratoryEquipments-new:
      type: object
      properties:
        productName:
          type: string
        Brand:
          type: string
        SerialNumber:
          type: string
        datePurchased:
          type: string
          format: YYYY-MM-DD  
        isActive:
          type: boolean

    nationalities:
      type: object
      properties:
        nationalityId:
          type: string
        nationalityName:
          type: string
        nationalityNameEn:
          type: string
        countryName:
          type: string
        countryNameEn:
          type: string
    
    nationalities-new:
      type: object
      properties:
        nationalityName:
          type: string
        nationalityNameEn:
          type: string
        countryName:
          type: string
        countryNameEn:
          type: string

  # Parameters ---------------------------------------
  parameters:
    nameSearch:
      name: nameSearch
      in: query
      required: false
      schema:
        type: string
      description: "filter returned list to match the name with given string"
    limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
      description: "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 30"
    starting_after_object:
      name: starting_after_object
      in: query
      required: false
      schema:
        type: string
      description: "A cursor for use in pagination. starting_after is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after=obj_foo in order to fetch the next page of the list."
    patientName:
      name: patientName
      in: query
      required: false
      schema:
        type: string
      description: name search query
    doctorName:
      name: doctorName
      in: query
      required: false
      schema:
        type: string
      description: name search query
    doctorSpecialty:
      name: doctorSpecialty
      in: query
      required: false
      schema:
        type: string
      description: name search query
    doctorId:
      name: doctorId
      in: query
      required: false
      schema:
        type: string
      description: name search query
    fromDate:
      name: fromDate
      in: query
      required: false
      schema:
        type: string
        format: YYYY-MM-DD
      description: name search query
    toDate:
      name: toDate
      in: query
      required: false
      schema:
        type: string
        format: YYYY-MM-DD
      description: name search query
