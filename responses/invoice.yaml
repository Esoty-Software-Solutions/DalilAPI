components:
  schemas: 
    writeInvoice:
      type: object
      properties:
        subscriberId:
          type: string
        beneficiaryId:
          type: string
        serviced:
          type: string
        charge:
          type: number
        date:
          type: string
          format: date
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "2022-07-17"
      required:
        - subscriberId
        - beneficiaryId
        - serviced
        - charge
        - date
        
    readInvoice:
      type: object
      properties:
        _id:
          type: string
        subscriberId:
          type: string
        beneficiaryId:
          type: string
        serviced:
          type: string
        charge:
          type: number
        date:
          type: string
          format: date
          pattern: /([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/
          example: "2022-07-17"
      required:
        - _id
        - subscriberId
        - beneficiaryId
        - serviced
        - charge
        - date

    failResponse:
      type: object
      properties: 
        statusCode:
          type: number
          example: 500
        message:
          type: string
          example: System Execution Error
        data: 
          type: object
          example: null 
    deleteResponse: 
         type: object
         properties:
            statusCode:
              type: string
              example: 201
            message:
              type: string
              example: Invoice Deleted
  parameters:
      limit:
        name: limit
        in: query
        required: false
        schema:
          type: integer
        description: "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 30"
      starting_after_object:
        name: starting_after_object
        in: query
        required: false
        schema:
          type: string
        description: "A cursor for use in pagination. starting_after_object is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include starting_after_object in order to fetch the next page of the list."
        deprecated: true
      skip:
        name: skip
        in: query
        required: false
        schema:
          type: integer
        description: "Skip a number of objects. Used for pagination"
      searchQuery:
        name: searchQuery
        in: query
        required: false
        schema:
          type: string
          description: filter string parameters like name and ID